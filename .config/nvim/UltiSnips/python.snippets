#{{{ General
snippet func "def func():" w
def ${1:funcname}():
endsnippet

snippet init "def __init__:"
def __init__(self):
    $0
endsnippet

snippet main "__main__" w
if __name__ == "__main__":
    $1
endsnippet

snippet class "class MyClass:" w
class ${1:MyClass}:

    def __init__(self):
        $0
endsnippet

snippet ifelse "ifelse" w
if ($1):
    $2
else:
    $3
endsnippet

snippet method "def method(self):" w
def ${1:mymethod}(self):
    raise NotImplementedError
endsnippet

snippet kv1 "{ key: value, }" wA
{ '${1:key}': ${2:value} },
endsnippet

snippet kv "key: value" w
'${1:key}' : ${2:val},
endsnippet

snippet am "abstractmethod" w
@abstractmethod
endsnippet

snippet cm "classmethod" w
@classmethod
endsnippet

snippet prop "@property" w
@property
endsnippet
# }}}
#{{{ Django
snippet path "path()" w
path('$1', include('$1.urls')),
endsnippet

snippet view "view" w
def ${1:viewname}(request$2):
    return HttpResponse("$1")
endsnippet

snippet endpoint "path()" w
path('${1:endpoint}', views.$1, name='$1'),$0
endsnippet
#}}}
#{{{ File Templates
snippet templatemodels "template:models" w
from django.db import models

class MyModel(models.Model):
    question = models.CharField(max_length=200)
    pub_date = models.DateTimeField('date published')
    votes = models.IntegerField(default=0)
endsnippet

snippet templateurls "template:urls" w
from django.urls import path

from . import views

urlpatterns = [
    path('', views.index, name='index'),
]
endsnippet

snippet templateviews "template:views" w
from django.http import HttpResponse
from django.shortcuts import render

def index(request):
    return HttpResponse("Hello, world")

# Dynamic view
def complex(request):
    context = {'key': value }
    return render(request, 'complex/index.html', context)
endsnippet
#}}}
#{{{ Doc
snippet nie "raise NotImplementedError" w
raise NotImplementedError
endsnippet

snippet bdoc "bigdoc" w
"""${1:Documentation}
"""
endsnippet

snippet sdoc "smalldoc" w
"""${1:Documentation}"""
endsnippet

snippet docendpoint "# /path/to/endpoint" w
"""
    ${1:path: path/to/endpoint}
    ${2:General description}
"""
endsnippet

snippet todo "# TODO: " w
# TODO: $1
endsnippet

snippet docp "Parameters" wA
Parameters
----------
$0
endsnippet

snippet docr "Returns" wA
Returns
-------
$0
endsnippet
#}}}
#{{{ click

snippet echo "click.echo()" w
echo('$1')$0
endsnippet

snippet click "@click" w
@click.${1:clicktype}$0
endsnippet

snippet copt "'--opt/--no-opt', default=False" i
@click.option($1)$0
endsnippet

snippet cctx "pass_context"
@click.pass_context
endsnippet

snippet carg "'arg', type=str" w
@click.argument('${1:arg}', type=${2:str})
endsnippet
# }}}
#{{{ Data
snippet naa "np.asarray()" 
np.asarray($1)$0$0
endsnippet
#}}}
