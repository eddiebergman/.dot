# TODO See if I can find some way map
#   things like bfLamb to \mbf{\Lambda}
#   for whatever mbf is set to.
# - Edit: could just set them as variables
# {{{ Help
# options
# i, in word
# b, word boundary
# A, auto expand
# r, regex match
# `!p ...` python code, t[i], ith tabstop
# }}}
# {{{ Symbols snippets
priority 1
snippet . "\cdot" i
\cdot$0
endsnippet

priority 2
snippet ... "\ldots" i
\ldots
endsnippet

snippet --- "\lline" w
\hfill \lline
endsnippet
# }}}
# {{{ Delimiters
global !p
def match_delim(delimiter):
    pairs = {
        '(' : ')',
        '[' : ']',
        '|' : '|',
        '{' : '}',
        '<' : '>',
    }
    return pairs[delimiter]
endglobal

priority 1
snippet '([\(|\|\[|\{|<])' "\left \right" ir
\left`!p snip.rv = match.group(1)`$1\right`!p snip.rv = match_delim(match.group(1))`$0
endsnippet
# }}}
# {{{ Regions
snippet section "\section{}"
\section{$1}$0
endsnippet

snippet beg "begin / end" w
\begin{$1}
    $0
\end{$1}
endsnippet

snippet mk "$$ - inline math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "\[\] - display math" wA
\[\color{black}
    $1
\ .\]
endsnippet
#}}}
# {{{ Lists
snippet desc "begin{description}"
\begin{description}
    $0
\end{description}
endsnippet

snippet itemize "begin{itemize}"
\begin{itemize}
    $0
\end{itemize}
endsnippet

snippet item "\item" w
\item $0
endsnippet

snippet itemm "\item []" w
\item [] \textbf{$1 - } $0
endsnippet
# }}}
# {{{ Math
#{{{ Sequences
priority 2
snippet 'infseq(.*)--(.*)--(.*)--(.*)' "x_1 <op> x_2, ..." wr
`!p
var = match.group(1)
op = match.group(2)
start = match.group(3)
second = match.group(4)
snip.rv = ''.join([
    var + '_{' + start + '} ',
    op + ' ',
    var + '_{' + second+ '} ',
    op + ' \ldots'
])
`
endsnippet

snippet 'seq0n' "seq0n" w
$1_0, \ldots, $1_n$0
endsnippet

snippet '(seqn|seq1n)' "seq1n" wr
$1_1, \ldots, $1_n$0
endsnippet

priority 1
snippet 'seq(.*)--(.*)--(.*)--(.*)' "x_1 <op> ... <op> x_n" wr
`!p
var = match.group(1)
op = match.group(2)
start = match.group(3)
end = match.group(4)
snip.rv = ''.join([
    var + '_{' + start + '} ',
    op + ' \ldots ' + op + ' ',
    var + '_{' + end + '} '
])
`
endsnippet

#}}}
#{{{ Reduction Operators
global !p
def op(name):
    operators = {
        'sum' : '\sum',
        'int' : '\int',
        'union' : '\\bigcap',
    }
    return operators[name]
endglobal

snippet '(sum|int|union)(.*)--(.*)--(.*)' "\sum_{}^{} x_i" ir
`!p
operator = op(match.group(1))
sub = match.group(2)
sup = match.group(3)
var = match.group(4)
snip.rv = ''.join([
    operator,
    '_{' + sub + '}',
    '^{' + sup + '}',
    ' ' + var
])
`
endsnippet

#}}}
#{{{ Single Value ops
snippet abs "| |"
\left\Vert $1 \right\Vert $0
endsnippet

snippet norm "|| ||"
\left\Vert\left\Vert  $1 \right\Vert\right\Vert $0
endsnippet

snippet 'inv' "a^{-1}" i
^{-1}
endsnippet
#}}}
#{{{ Quick maf
snippet sub "_{}" i
_{$1}$0
endsnippet

snippet sup "^{}" i
^{$1}$0
endsnippet

snippet \\ "\frac{}{}" i
\frac{ $1 }{ $2 }$0
endsnippet

snippet sq "^2" i
^2$0
endsnippet

priority 1
snippet union "\cap" i
\bigcap$0
endsnippet

priority 2
snippet sunion "\cap" i
\cap$0
endsnippet

snippet setreal "\mathbb{R}" i
\mathbb{R}$0
endsnippet

snippet setcomplex "\mathbb{C}" i
\mathbb{C}$0
endsnippet

snippet setint "\mathbb{Z}" i
\mathbb{Z}$0
endsnippet
#}}}
# }}}
# {{{ Phrases
snippet i.e. "i.e." i
\textit{i.e.}
endsnippet

snippet w.r.t. "w.r.t." i
\textit{w.r.t.}
endsnippet

snippet r.h.s "right hand side"
\textit{r.h.s.}
endsnippet
# }}}
# {{{ Text commands
snippet small "\small" i
\small$0
endsnippet

snippet bs "\boldsymbol" w
\boldsymbol{$1}$0
endsnippet

snippet label "\label{}" w
\label{$1}$0
endsnippet

snippet hat "\hat{}" w
\hat{$1}$0
endsnippet

snippet ref "\hypperref{}" w
\hyperref[$1]{$2}$0
endsnippet

snippet bf "bold" w
\textbf{$1}$0
endsnippet

snippet mbf "mathbf" i
\mathbf{$1}$0
endsnippet

snippet mtt "mathbb" w
\mathbb{$1}$0
endsnippet

snippet mbb "mathbb" i
\mathbb{$1}$0
endsnippet

snippet mit "mathcal" w
\mathcal{$1}$0
endsnippet

snippet mcal "mathcal" i
\mathcal{$1}$0
endsnippet

snippet mscr "mathscr" i
\mathscr{$1}$0
endsnippet

snippet it "italic" w
\textit{$1}$0
endsnippet

snippet tt "code" w
\texttt{$1} $0
endsnippet

snippet bp "\textbullet\ " w
\textbullet\ $0
endsnippet

# }}}
# {{{ For Reference of how to write it
#{{{ images
snippet figure "\figure{...}" w
${1:% include a  '\\graphicspath{ {./figures} in the header }}
\\begin{figure}[h]
    \\centering
    \includegraphics[width=0.9\textwidth]{${2:figname}}
    \\captionof{figure}{${3:the caption of the figure}}
    \\label{fig:${4:label}}
\\end{figure}
endsnippet

snippet sfigure "\wrapfigure{...}" w
${1:% include a  '\\graphicspath{ {./figures} in the header }}
\\begin{wrapfigure}{l}{0.25\textwidth}
    \\centering
    \includegraphics[width=0.25\textwidth]{${2:figname}}
    \\captionof{figure}{${3:the caption of the figure}}
    \\label{fig:${4:label}}
\\end{wrapfigure}
endsnippet

#}}}
#{{{ Other
snippet biblio "\bibliography{} \blibiographystyle"
\bibliographystyle{vancouver}
\bibliography{biblio}
endsnippet

snippet command "\newcommand{\cname}{ body }\"
\\newcommand{\\${1:cname}}{ $2 }
endsnippet

snippet command1 "\newcommand{\cname}[1]{ #1 }\"
\\newcommand{\\${1:cname}} [1] {
    ${2: Here is param #1}
}
endsnippet

snippet marginnote "\marginnote"
\marginnote{$1}[\parskip]
endsnippet
#}}}
# }}}
# {{{ Tikz
snippet tikz "\begin{tikzpicture}" w
\begin{tikzpicture}
    $1
\end{tikzpicture}
endsnippet

snippet boundingbox "\draw rectangle" w
\draw (current bounding box.south west) rectangle (current bounding box.north east);
endsnippet
#}}}
# {{{ German
snippet : "\:" i
\\"$0
endsnippet

snippet ss "{\ss}" i
{\\ss}
endsnippet
#}}}
